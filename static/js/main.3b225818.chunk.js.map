{"version":3,"sources":["components/Orbit.jsx","components/Background.jsx","components/Floor.jsx","state.js","components/ColorPicker.jsx","components/BoundingBox.jsx","components/Model.jsx","components/Draggable.jsx","components/Cars.jsx","components/CameraControls.jsx","components/CameraButtons.jsx","components/Bulb.jsx","components/Lights.jsx","components/Effects.jsx","components/Spinner.jsx","App.js","reportWebVitals.js","index.js"],"names":["extend","OrbitControls","Orbit","useThree","camera","gl","attach","args","domElement","Background","useState","error","setError","texture","useLoader","THREE","process","undefined","console","formatted","useMemo","image","height","generateMipmaps","minFilter","encoding","fromEquirectangularTexture","object","Floor","props","useBox","mass","ref","wrapS","wrapT","repeat","set","receiveShadow","map","color","metalness","roughness","clearcoat","reflectivity","opacity","state","activeMesh","activeMeshName","cameraPos","target","shouldUpdate","colorCategories","standard","name","metallic","matte","premium","anisotropy","sharedStyles","width","borderRadius","cursor","margin","border","transition","boxShadow","position","outline","categoryStyle","display","flexDirection","alignItems","backgroundColor","padding","backdropFilter","ColorPicker","activeCategory","setActiveCategory","selectedColor","setSelectedColor","style","zIndex","left","right","top","gap","marginBottom","Object","keys","category","onClick","handleCategoryClick","textTransform","fontWeight","gridTemplateColumns","colorData","idx","material","clearcoatRoughness","anisotropyRotation","Math","PI","handleClick","transform","title","BoundingBox","offset","dims","visible","children","api","scale","wireframe","Model","mixer","model","GLTFLoader","path","animations","length","scene","forEach","clip","clipAction","play","useFrame","delta","update","traverse","child","isMesh","castShadow","side","DragControls","Draggable","groupRef","useRef","controlsRef","setChildren","useEffect","current","addEventListener","e","orbitControls","enabled","log","copy","velocity","transformGroup","Cars","fallback","Array","fill","CameraControls","getObjectByName","lerp","enableDamping","dampingFactor","rotateSpeed","zoomSpeed","clone","sub","CameraButtons","focusIndex","setFocusIndex","angleIndex","setAngleIndex","sets","label","angles","updateCamera","carIndex","carButtonStyle","activeCarButtonStyle","angleButtonStyle","justifyContent","fontSize","activeAngleButtonStyle","bottom","car","index","angle","Bulb","lights","push","shadow-mapSize-height","shadow-mapSize-width","shadow-radius","emissive","Lights","intensity","Effects","setLights","focusDistance","focalLength","bokehScale","Spinner","_","get","rotation","y","x","App","window","innerWidth","innerHeight","windowDimensions","setWindowDimensions","handleResize","powerPreference","antialias","stencil","depth","shadowMap","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b225818.chunk.js","sourcesContent":["import { extend, useThree } from 'react-three-fiber';\nimport {\n    OrbitControls\n} from 'three/examples/jsm/controls/OrbitControls';\nextend({ OrbitControls });\n\nconst Orbit = () => {\n    const { camera, gl } = useThree();\n    return (\n        <orbitControls \n            attach='orbitControls'\n            args={[camera, gl.domElement]} \n        />\n    )\n}\n\nexport default Orbit;","import { useLoader, useThree } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { useMemo, useState } from 'react';\n\nconst Background = () => {\n    const [error, setError] = useState(false);\n\n    const texture = useLoader(\n        THREE.TextureLoader,\n        process.env.PUBLIC_URL + '/modern-background-gray.jpeg',\n        undefined,\n        (error) => {\n            console.error('Error loading background texture:', error);\n            setError(true);\n        }\n    );\n\n    const { gl } = useThree();\n    const formatted = useMemo(() => {\n        if (error) return null;\n\n        const renderTarget = new THREE.WebGLCubeRenderTarget(\n            texture.image.height,\n            {\n                generateMipmaps: true,\n                minFilter: THREE.LinearMipmapLinearFilter,\n                encoding: THREE.sRGBEncoding\n            }\n        );\n\n        return renderTarget.fromEquirectangularTexture(gl, texture);\n    }, [gl, texture, error]);\n\n    if (error) {\n        return null;\n    }\n\n    return (\n        <primitive\n            attach='background'\n            object={formatted}\n        />\n    )\n}\n\nexport default Background;\n","import { useBox } from 'use-cannon';\nimport { useLoader } from 'react-three-fiber';\nimport * as THREE from 'three';\n\nconst Floor = props => {\n    const [ref, api] = useBox(() => ({\n        args: [20, 1, 10],\n        mass: 0,\n        ...props\n    }));\n\n    const texture = useLoader(\n        THREE.TextureLoader,\n        process.env.PUBLIC_URL + '/floor.jpg'\n    );\n\n    texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n    texture.repeat.set(20, 20);\n\n    return (\n        <mesh ref={ref} {...props} receiveShadow>\n            <boxBufferGeometry args={[200, 1, 200]} />\n            <meshPhysicalMaterial\n                map={texture}\n                color={'#444444'}\n                metalness={0.1}\n                roughness={0.8}\n                clearcoat={0.1}\n                reflectivity={0.5}\n                opacity={1}\n            />\n        </mesh>\n    )\n}\n\nexport default Floor;\n","import * as THREE from 'three'\n// model3 name: \"Capot001_CAR_PAINT_0\"\n// model s name: \"object005_bod_0\"\nconst state = {\n    activeMesh: {},\n    activeMeshName: \"Capot001_CAR_PAINT_0\",\n    cameraPos: new THREE.Vector3(9,2,4),\n    target: new THREE.Vector3(4,0,0),\n    shouldUpdate: true\n}\n\nexport default state","import * as THREE from 'three';\nimport state from '../state'\nimport { useState } from 'react';\n\nconst colorCategories = {\n    standard: [\n        { name: 'Pearl White', color: 'rgb(220, 218, 215)', metalness: 0.2, roughness: 0.5, clearcoat: 0.8 },\n        { name: 'Solid Black', color: 'rgb(5, 5, 5)', metalness: 0.2, roughness: 0.5, clearcoat: 0.8 },\n        { name: 'Deep Red', color: 'rgb(80, 0, 0)', metalness: 0.2, roughness: 0.5, clearcoat: 0.8 },\n        { name: 'Ocean Blue', color: 'rgb(10, 30, 50)', metalness: 0.2, roughness: 0.5, clearcoat: 0.8 },\n    ],\n    metallic: [\n        { name: 'Midnight Silver', color: 'rgb(180, 180, 185)', metalness: 0.9, roughness: 0.1, clearcoat: 1.0 },\n        { name: 'Deep Blue Metallic', color: 'rgb(12, 32, 87)', metalness: 0.9, roughness: 0.1, clearcoat: 1.0 },\n        { name: 'Gunmetal Grey', color: 'rgb(60, 65, 75)', metalness: 0.9, roughness: 0.1, clearcoat: 1.0 },\n        { name: 'Champagne Gold', color: 'rgb(196, 180, 138)', metalness: 0.9, roughness: 0.1, clearcoat: 1.0 },\n    ],\n    matte: [\n        { name: 'Matte Black', color: 'rgb(10, 10, 10)', metalness: 0.0, roughness: 1.0 },\n        { name: 'Matte Grey', color: 'rgb(40, 40, 40)', metalness: 0.0, roughness: 1.0 },\n        { name: 'Matte Blue', color: 'rgb(15, 20, 35)', metalness: 0.0, roughness: 1.0 },\n        { name: 'Matte Green', color: 'rgb(20, 30, 20)', metalness: 0.0, roughness: 1.0 },\n    ],\n    premium: [\n        { name: 'Racing Red', color: 'rgb(200, 0, 0)', metalness: 0.8, roughness: 0.2, clearcoat: 1.0, anisotropy: 1.0 },\n        { name: 'Electric Green', color: 'rgb(0, 255, 128)', metalness: 0.8, roughness: 0.2, clearcoat: 1.0, anisotropy: 1.0 },\n        { name: 'Royal Purple', color: 'rgb(72, 0, 120)', metalness: 0.8, roughness: 0.2, clearcoat: 1.0, anisotropy: 1.0 },\n        { name: 'Solar Orange', color: 'rgb(255, 128, 0)', metalness: 0.8, roughness: 0.2, clearcoat: 1.0, anisotropy: 1.0 },\n    ]\n};\n\nconst sharedStyles = {\n    height: 40,\n    width: 40,\n    borderRadius: '50%',\n    cursor: 'pointer',\n    margin: '5px',\n    border: '2px solid rgba(255, 255, 255, 0.1)',\n    transition: 'all 0.3s ease',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n    position: 'relative',\n    outline: '1px solid rgba(255, 255, 255, 0.1)'\n};\n\nconst categoryStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    margin: '0 10px',\n    backgroundColor: 'rgba(40, 40, 40, 0.85)',\n    padding: '15px',\n    borderRadius: '15px',\n    boxShadow: '0 4px 6px rgba(0,0,0,0.3)',\n    backdropFilter: 'blur(10px)',\n    border: '1px solid rgba(255, 255, 255, 0.1)'\n};\n\nconst ColorPicker = () => {\n    const [activeCategory, setActiveCategory] = useState('standard');\n    const [selectedColor, setSelectedColor] = useState(null);\n\n    const handleClick = (colorData) => {\n        if (!state.activeMesh) return;\n        setSelectedColor(colorData.name);\n        state.activeMesh.material.color = new THREE.Color(colorData.color);\n        state.activeMesh.material.metalness = colorData.metalness;\n        state.activeMesh.material.roughness = colorData.roughness;\n        if (colorData.clearcoat !== undefined) {\n            state.activeMesh.material.clearcoat = colorData.clearcoat;\n            state.activeMesh.material.clearcoatRoughness = 0.1;\n        }\n        if (colorData.anisotropy !== undefined) {\n            state.activeMesh.material.anisotropy = colorData.anisotropy;\n            state.activeMesh.material.anisotropyRotation = Math.PI / 4;\n        }\n    };\n\n    const handleCategoryClick = (category) => {\n        setActiveCategory(category);\n        setSelectedColor(null);\n    };\n\n    return (\n        <div\n            style={{\n                position: 'absolute',\n                zIndex: 1,\n                left: 0,\n                right: 0,\n                margin: 'auto',\n                width: 'fit-content',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                top: '20px',\n                gap: '15px'\n            }}\n        >\n            <div style={{ display: 'flex', gap: '10px', marginBottom: '10px' }}>\n                {Object.keys(colorCategories).map(category => (\n                    <button\n                        key={category}\n                        onClick={() => handleCategoryClick(category)}\n                        style={{\n                            padding: '8px 20px',\n                            backgroundColor: activeCategory === category ? 'rgba(255, 255, 255, 0.25)' : 'rgba(40, 40, 40, 0.85)',\n                            color: 'white',\n                            border: '1px solid rgba(255, 255, 255, 0.1)',\n                            borderRadius: '15px',\n                            cursor: 'pointer',\n                            textTransform: 'capitalize',\n                            fontWeight: activeCategory === category ? 'bold' : 'normal',\n                            transition: 'all 0.3s ease',\n                            boxShadow: '0 4px 6px rgba(0,0,0,0.3)',\n                            backdropFilter: 'blur(10px)'\n                        }}\n                    >\n                        {category}\n                    </button>\n                ))}\n            </div>\n            <div style={categoryStyle}>\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: '10px', padding: '5px' }}>\n                    {colorCategories[activeCategory].map((colorData, idx) => (\n                        <div\n                            key={idx}\n                            onClick={() => handleClick(colorData)}\n                            style={{\n                                ...sharedStyles,\n                                backgroundColor: colorData.color,\n                                transform: selectedColor === colorData.name ? 'scale(1.1)' : 'scale(1)',\n                                border: selectedColor === colorData.name ? '2px solid white' : '2px solid transparent',\n                                ':hover': {\n                                    transform: 'scale(1.1)',\n                                    boxShadow: '0 4px 8px rgba(0,0,0,0.3)'\n                                }\n                            }}\n                            title={`${colorData.name}${colorData.metalness ? '\\nMetalness: ' + colorData.metalness : ''}${colorData.roughness ? '\\nRoughness: ' + colorData.roughness : ''}`}\n                        />\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ColorPicker;\n","import { useBox } from 'use-cannon'\n\nconst BoundingBox = ({\n    position = [0,0,0],\n    offset = [0,0,0],\n    dims = [1,1,1],\n    visible = false,\n    children\n}) => {\n    const [ref, api] = useBox(() => ({ mass: 1, args: dims, position: position }))\n    return (\n        <group ref={ref} api={api}>\n            <mesh scale={dims} visible={visible}>\n                <boxBufferGeometry />\n                <meshPhysicalMaterial wireframe/>\n            </mesh>\n            <group position={offset}>\n                {children}\n            </group>\n        </group>\n    )\n}\n\nexport default BoundingBox","import { useLoader, useFrame } from 'react-three-fiber';\nimport {\n    GLTFLoader\n} from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three'\nconst Model = props => {\n    const model = useLoader(\n        GLTFLoader,\n        process.env.PUBLIC_URL + props.path\n    )\n\n    let mixer\n    if (model.animations.length > 0) {\n        mixer = new THREE.AnimationMixer(model.scene)\n        model.animations.forEach(clip => {\n            const action = mixer.clipAction(clip)\n            action.play()\n        })\n    }\n\n    useFrame((scene,delta) => {\n        mixer?.update(delta)\n    })\n\n    model.scene.traverse(child => {\n        if (child.isMesh) {\n            child.castShadow = true\n            child.receiveShadow = true\n            child.material.side = THREE.FrontSide\n        }\n    })\n\n    return (\n        <primitive\n            object={model.scene}\n            scale={props.scale}\n            position={props.position}\n        />\n    )\n}\n\nexport default Model;\n","import {\n    DragControls\n} from 'three/examples/jsm/controls/DragControls';\nimport { useRef, useEffect, useState } from 'react';\nimport { useThree, extend } from 'react-three-fiber';\nextend ({ DragControls });\n\nconst Draggable = props => {\n    const groupRef = useRef();\n    const controlsRef = useRef();\n    const [children, setChildren] = useState([])\n    const { camera, gl, scene } = useThree();\n\n    useEffect(() => {\n        setChildren(groupRef.current.children)\n    },[])\n\n    useEffect(() => {\n        controlsRef.current.addEventListener(\n            'hoveron',\n            e => scene.orbitControls.enabled = false\n        )\n        controlsRef.current.addEventListener(\n            'hoveroff',\n            e => scene.orbitControls.enabled = true\n        )\n        controlsRef.current.addEventListener(\n            'dragstart',\n            e => {\n                console.log(e.object);\n                e.object.api?.mass.set(0)\n            }\n        )\n        controlsRef.current.addEventListener(\n            'dragend',\n            e => e.object.api?.mass.set(1)\n        )\n        controlsRef.current.addEventListener(\n            'drag',\n            e => {\n                e.object.api?.position.copy(e.object.position)\n                e.object.api?.velocity.set(0,0,0)\n            }\n        )\n    },[children])\n\n    return (\n        <group ref={groupRef}>\n            <dragControls\n                transformGroup={props.transformGroup}\n                ref={controlsRef}\n                args={[children,camera, gl.domElement]}\n            />\n            {props.children}\n        </group>\n    )\n}\n\nexport default Draggable;\n","import { Suspense } from 'react'\nimport BoundingBox from './BoundingBox'\nimport Model from './Model'\nimport Draggable from './Draggable'\n\nconst Cars = ({ }) => {\n    return (\n        <Suspense fallback={null}>\n            <Draggable transformGroup>\n                <BoundingBox\n                    position={[4, 4, 0]}\n                    dims={[3, 2, 6]}\n                    offset={[0, -0.4, 0.8]}\n                >\n                    <Model\n                        path='/tesla_model_3/scene.gltf'\n                        scale={new Array(3).fill(0.01)}\n                    />\n                </BoundingBox>\n            </Draggable>\n            <Draggable transformGroup>\n                <BoundingBox\n                    position={[-4, 4, 0]}\n                    dims={[3, 2, 7]}\n                    offset={[0, -0.8, 0.2]}\n                >\n                    <Model\n                        path='/tesla_model_s/scene.gltf'\n                        scale={new Array(3).fill(0.013)}\n                    />\n                </BoundingBox>\n            </Draggable>\n            <Draggable transformGroup>\n                <BoundingBox\n                    position={[-8, 4, 0]}\n                    dims={[3, 2, 7]}\n                    offset={[-4, -0.9, -0.4]}\n                >\n                    <Model\n                        path='/tesla_roadster_2020_interior/scene.gltf'\n                        scale={new Array(3).fill(2)}\n                    />\n                </BoundingBox>\n            </Draggable>\n\n            {/*<Draggable transformGroup >*/}\n            {/*    <Model*/}\n            {/*        path='/old_gramophone/scene.gltf'*/}\n            {/*        scale={new THREE.Vector3(.05, .05, .05)}*/}\n            {/*        position={[0, 0, 3]}*/}\n            {/*    />*/}\n            {/*</Draggable>*/}\n            {/*<Draggable transformGroup>*/}\n            {/*    <BoundingBox*/}\n            {/*        dims={[3, 2, 6]}*/}\n            {/*    >*/}\n            {/*        <Model*/}\n            {/*            path='/spectral_rubix/scene.gltf'*/}\n            {/*            scale={new THREE.Vector3(.3, .3, .3)}*/}\n            {/*            position={[0, 1, -5]}*/}\n            {/*        />*/}\n            {/*    </BoundingBox>*/}\n            {/*</Draggable>*/}\n        </Suspense>\n    )\n}\n\nexport default Cars\n","import { useFrame } from 'react-three-fiber'\nimport state from '../state'\n\nconst CameraControls = ({ }) => {\n    useFrame(({ camera, scene }) => {\n        if (state.activeMesh.name !== state.activeMeshName) {\n            state.activeMesh = scene.getObjectByName(\n                state.activeMeshName\n            ) || {}\n        }\n\n        if (state.shouldUpdate) {\n            const positionEasing = 0.03;\n            const rotationEasing = 0.04;\n\n            camera.position.lerp(state.cameraPos, positionEasing);\n            scene.orbitControls.target.lerp(state.target, rotationEasing);\n\n            scene.orbitControls.enableDamping = true;\n            scene.orbitControls.dampingFactor = 0.03;\n            scene.orbitControls.rotateSpeed = 0.7;\n            scene.orbitControls.zoomSpeed = 0.8;\n\n            scene.orbitControls.update();\n\n            const diff = camera.position.clone()\n                .sub(state.cameraPos).length();\n            if (diff < 0.01) {\n                state.shouldUpdate = false;\n                scene.orbitControls.enableDamping = false;\n            }\n        }\n    })\n    return null\n}\n\nexport default CameraControls\n","import {useState} from 'react';\nimport state from '../state'\n\nconst CameraButtons = () => {\n    const [focusIndex, setFocusIndex] = useState(2);\n    const [angleIndex, setAngleIndex] = useState(0);\n    const sets = [\n        {\n            name: \"Object_6\",\n            label: \"Roadster\",\n            angles: [\n                { label: \"Dynamic\", cameraPos: [-8, 2, 5], target: [-12, 0, 0] },\n                { label: \"Front\", cameraPos: [-12, 2, 8], target: [-12, 0, 0] },\n                { label: \"Side\", cameraPos: [-5, 2, 0], target: [-12, 0, 0] },\n                { label: \"Top\", cameraPos: [-12, 7, 0], target: [-12, 0, 0] },\n                { label: \"Rear\", cameraPos: [-12, 2, -8], target: [-12, 0, 0] }\n            ]\n        },\n        {\n            name: \"object005_bod_0\",\n            label: \"Model S\",\n            angles: [\n                { label: \"Dynamic\", cameraPos: [0, 2, 5], target: [-4, 0, 0] },\n                { label: \"Front\", cameraPos: [-4, 2, 8], target: [-4, 0, 0] },\n                { label: \"Side\", cameraPos: [3, 2, 0], target: [-4, 0, 0] },\n                { label: \"Top\", cameraPos: [-4, 7, 0], target: [-4, 0, 0] },\n                { label: \"Rear\", cameraPos: [-4, 2, -8], target: [-4, 0, 0] }\n            ]\n        },\n        {\n            name: \"Capot001_CAR_PAINT_0\",\n            label: \"Model 3\",\n            angles: [\n                { label: \"Dynamic\", cameraPos: [8, 2, 5], target: [4, 0, 0] },\n                { label: \"Front\", cameraPos: [4, 2, 8], target: [4, 0, 0] },\n                { label: \"Side\", cameraPos: [11, 2, 0], target: [4, 0, 0] },\n                { label: \"Top\", cameraPos: [4, 7, 0], target: [4, 0, 0] },\n                { label: \"Rear\", cameraPos: [4, 2, -8], target: [4, 0, 0] }\n            ]\n        }\n    ];\n\n    const updateCamera = (carIndex, angleIndex) => {\n        const { cameraPos, target } = sets[carIndex].angles[angleIndex];\n        state.cameraPos.set(...cameraPos);\n        state.target.set(...target);\n        state.activeMeshName = sets[carIndex].name;\n        state.shouldUpdate = true;\n    };\n\n        const containerStyle = {\n        position: 'absolute',\n        bottom: '5vh',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: '15px',\n        zIndex: 1\n    };\n\n    const carSelectorStyle = {\n        display: 'flex',\n        gap: '10px',\n        marginBottom: '10px'\n    };\n\n    const carButtonStyle = {\n        padding: '8px 20px',\n        backgroundColor: 'rgba(40, 40, 40, 0.85)',\n        color: 'white',\n        border: '1px solid rgba(255, 255, 255, 0.1)',\n        borderRadius: '15px',\n        cursor: 'pointer',\n        transition: 'all 0.3s ease',\n        boxShadow: '0 4px 6px rgba(0,0,0,0.3)',\n        backdropFilter: 'blur(10px)',\n        textTransform: 'capitalize',\n        fontWeight: 'normal'\n    };\n\n    const activeCarButtonStyle = {\n        ...carButtonStyle,\n        backgroundColor: 'rgba(255, 255, 255, 0.25)',\n        fontWeight: 'bold'\n    };\n\n    const angleGridStyle = {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(5, 1fr)',\n        gap: '10px',\n        padding: '15px',\n        backgroundColor: 'rgba(40, 40, 40, 0.85)',\n        borderRadius: '15px',\n        boxShadow: '0 4px 6px rgba(0,0,0,0.3)',\n        backdropFilter: 'blur(10px)',\n        border: '1px solid rgba(255, 255, 255, 0.1)'\n    };\n\n    const angleButtonStyle = {\n        width: '60px',\n        height: '60px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(60, 60, 60, 0.85)',\n        color: 'white',\n        border: '2px solid rgba(255, 255, 255, 0.1)',\n        borderRadius: '8px',\n        cursor: 'pointer',\n        fontSize: '12px',\n        transition: 'all 0.3s ease',\n        boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n        outline: '1px solid rgba(255, 255, 255, 0.1)'\n    };\n\n    const activeAngleButtonStyle = {\n        ...angleButtonStyle,\n        backgroundColor: 'rgba(80, 80, 80, 0.95)',\n        transform: 'scale(1.1)',\n        border: '2px solid white'\n    };\n\n    return (\n        <div style={containerStyle}>\n            <div style={carSelectorStyle}>\n                {sets.map((car, index) => (\n                    <button\n                        key={car.name}\n                        onClick={() => {\n                            setFocusIndex(index);\n                            setAngleIndex(0);\n                            updateCamera(index, 0);\n                        }}\n                        style={index === focusIndex ? activeCarButtonStyle : carButtonStyle}\n                    >\n                        {car.label}\n                    </button>\n                ))}\n            </div>\n            <div style={angleGridStyle}>\n                {sets[focusIndex].angles.map((angle, index) => (\n                    <button\n                        key={angle.label}\n                        onClick={() => {\n                            setAngleIndex(index);\n                            updateCamera(focusIndex, index);\n                        }}\n                        style={index === angleIndex ? activeAngleButtonStyle : angleButtonStyle}\n                    >\n                        {angle.label}\n                    </button>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default CameraButtons\n","import { useEffect, useRef } from 'react'\nimport { useThree } from 'react-three-fiber'\n\nconst Bulb = props => {\n    const ref = useRef()\n    const { scene } = useThree()\n    useEffect(() => {\n        if (scene.lights) scene.lights.push(ref)\n        else scene.lights = [ref]\n    }, [])\n    return (\n        <mesh {...props} ref={ref}>\n            <pointLight\n                castShadow\n                shadow-mapSize-height={2**10}\n                shadow-mapSize-width={2**10}\n                shadow-radius={10}\n            />\n            <sphereBufferGeometry args={[0.2, 20, 20]} />\n            <meshPhongMaterial emissive='white' />\n        </mesh>\n    )\n}\n\nexport default Bulb;\n","import Bulb from './Bulb'\n\nconst Lights = () => {\n    return (\n        <>\n            <ambientLight intensity={0.2} />\n            <directionalLight\n                shadow-mapSize-height={2**11}\n                shadow-mapSize-width={2**11}\n                shadow-radius={8}\n                intensity={0.6}\n                position={[6,5,0]}\n                castShadow\n            />\n            <Bulb position={[-6,4,0]} intensity={0.6} />\n            <Bulb position={[0,4,0]} intensity={0.6} />\n            <Bulb position={[6,4,0]} intensity={0.6} />\n        </>\n    )\n}\n\nexport default Lights\n","import {\n    EffectComposer,\n    DepthOfField,\n    GodRays\n} from 'react-postprocessing'\nimport { useState, useEffect } from 'react'\nimport { useThree } from 'react-three-fiber'\n\nconst Effects = () => {\n    const [lights, setLights] = useState(null)\n    const { scene } = useThree()\n    useEffect(() => {\n        if (scene.lights && scene.lights.length === 3)\n            setLights(scene.lights)\n    }, [scene.lights])\n    return (\n        lights ?\n        <EffectComposer>\n            <DepthOfField\n                focusDistance={0}\n                focalLength={0.02}\n                bokehScale={2}\n                height={480}\n            />\n            {/* {lights.map(light =>\n                <GodRays\n                    key={light.current.uuid}\n                    sun={light.current}\n                />\n            )} */}\n        </EffectComposer>\n        :\n        null\n    )\n}\n\nexport default Effects","import React, {useRef} from 'react';\nimport * as THREE from 'three';\nimport {useFrame} from \"react-three-fiber\";\nimport _ from 'lodash';\n\nconst Spinner = () => {\n    const ref = useRef();\n    useFrame(() => {\n        const y = _.get(ref.current, 'rotation.y');\n        if (y) {\n            ref.current.rotation.y += .1;\n            ref.current.rotation.x += .1;\n        }\n    });\n\n    return (\n        <mesh ref={ref} position={[0, 3, 0]}>\n            <dodecahedronBufferGeometry args={[1, 1]} />\n            <meshPhysicalMaterial color={'rgb(30, 75, 93)'} opacity={.5} side={THREE.DoubleSide}/>\n        </mesh>\n    )\n};\n\nexport default Spinner;\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport {\n    Canvas, useFrame\n} from 'react-three-fiber';\nimport { Physics } from 'use-cannon';\nimport { Suspense } from 'react';\nimport Orbit from './components/Orbit';\nimport Box from './components/Box';\nimport Background from './components/Background';\nimport Floor from './components/Floor';\nimport ColorPicker from './components/ColorPicker';\nimport Cars from './components/Cars'\nimport CameraControls from './components/CameraControls'\nimport CameraButtons from './components/CameraButtons'\nimport Lights from './components/Lights'\nimport Effects from './components/Effects'\nimport Spinner from \"./components/Spinner\";\n\nfunction App() {\n    const [windowDimensions, setWindowDimensions] = useState({\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n\n    useEffect(() => {\n        window.addEventListener('resize', handleResize);\n    }, [windowDimensions]);\n\n    const handleResize = () => {\n        setWindowDimensions({\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n    };\n  return (\n    <div style={{height: '100vh', width: '100vw'}}>\n      <ColorPicker />\n      <CameraButtons />\n      <Canvas\n        gl={{\n          powerPreference: \"high-performance\",\n          antialias: false,\n          stencil: false,\n          depth: false\n        }}\n        shadowMap\n        style={{background: 'black'}}\n        camera={{ position: [7,7,7] }}\n      >\n        <Suspense fallback={<Spinner />}>\n            <Background windowDimensions={windowDimensions} />\n        </Suspense>\n        <CameraControls />\n        <Lights/>\n        <Orbit />\n        <Physics>\n          <Cars />\n          <Floor position={[0,-0.5,0]}/>\n        </Physics>\n        <Effects />\n      </Canvas>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}